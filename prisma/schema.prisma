// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  isAdmin       Boolean   @default(false)
  password      String?
  emailVerified DateTime?
  image         String?

  accounts Account[]
  sessions Session[]
  Profile  Profile?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model SubscriptionPlan {
  id          String  @id @default(cuid())
  label       String
  description String
  price       Float
  per         String
  active      Boolean @default(true)

  Profile Profile[]
}

model Profile {
  id        String   @id @default(cuid())
  goal      String
  name      String
  dob       DateTime
  gender    String
  weight    Float
  height    Float
  objective String

  userId             String           @unique
  user               User             @relation(fields: [userId], references: [id])
  subscriptionPlanId String
  subscriptionPlan   SubscriptionPlan @relation(fields: [subscriptionPlanId], references: [id])
}
